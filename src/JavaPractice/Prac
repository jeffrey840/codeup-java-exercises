# Extra Array Exercises

1. Create a command line grocery list maker

    - before prompting the user to enter each item, ask how many items will be
      entered
    - for each item, the user should be prompted to enter in the name, quantity,
      and category of each grocery item
    - Create a `GroceryItem` class from which to instantiate `GroceryItem`
      objects to store in an array
    - once the user has entered all items, print out all items grouped by
      category and alphabetized in each group

1. Build a command line Tic Tac Toe game.

    - the game board should be a multi-dimensional array of Strings
    - be sure the board displays the column letter and row number:

                A   B   C
            1  -O- --- ---
            2  --- -X- ---
            3  --- --- ---

    - the "O" in the example above is at 1a and the "X" is at 2B
    - the winning three in a row should match should be drawn with stars instead
      of dashes:

                A   B   C
            1  *O* *O* *O*
            2  --- -X- ---
            3  -X- --- ---

    - player one and player two should alternate turns
    - be sure to display who's turn it is and who won

    =====================================


# Java String Bonuses

### Date Format Converter Program

**Take in the following format:**

```MM/DD/YYYY```

**Output the following:**

```MonthName DD, YYYY```

**Example:**

input - ```12/01/1999```

output - ```December 12, 1999```

### Sentence Analyzer Program

Create sentence analyzer program that tells the user how many vowels and consonants were used.

**Example:**

input - ```"The hill are alive."```

output - ```5 vowels and 10 consonants```

### Command Line Calculator

The program should welcome the user, prompt them for a calculation,
and give the result. The user should be prompted after each result is
outputted if they want to enter another calculation. When they
say no, give them an exit message. Allow the user first to specify
how many operands they will enter. Do not worry about
input validation (assume user enters correct data type).

Example program:

```
WELCOME TO THE CALCULATOR APP!!! (program output)

Do you wish to enter a new calculation? (program output)
yes (user inputs this)

How many operands will you calculate? (program output)
2 (user inputs this)

Please enter a calculation: (program output)
2 + 2 (user enters this or something like this)
The output of 2 + 2 is 4. (program outputs this)

Do you wish to enter a new calculation? (program outputs this)
no (user enters this)

GOODBYE!!!

```

==================================

# Extra Java Exercises

## Control Structures and Loops

1. Write a program in Java to read 10 numbers from keyboard and find their sum
   and average

    ```
    Expected Output :
    The sum of 10 numbers is : 55
    The Average is : 5.500000
    ```

1. Write a program in Java to display the cube of the number upto given an
   integer. Read the number using the `Scanner` class.

    ```
    Expected Output :
    Number is : 1 and cube of the 1 is :1
    Number is : 2 and cube of the 2 is :8
    Number is : 3 and cube of the 3 is :27
    Number is : 4 and cube of the 4 is :64
    Number is : 5 and cube of the 5 is :125
    ```

1. Write a program in Java to display the n terms of odd natural number and
   their sum. Read the odd number using the `Scanner` class

    ```
    Test Data
    Input number of terms : 10
    Expected Output :
    The odd numbers are :1 3 5 7 9 11 13 15 17 19
    The Sum of odd Natural Number upto 10 terms : 100
    ```

1. Write a program in Java to display the pattern like right angle triangle with
   a number. Read the number using the `Scanner` class.

    ```
    The pattern like :

    1
    12
    123
    1234
    ```

1. Write a program in Java to make such a pattern like right angle triangle with
   number increased by 1.

    ```
    With an input of 10.
    The pattern must look like :

       1
       2 3
       4 5 6
       7 8 9 10
    ```



    ==========================

# File IO

1. Files exercise

    Create a `FileHandler` class in the `util` package, we will use this class
    to handle all kinds of file operations. The class should have 2 private
    properties: directory, filename, don't forget to handle the exceptions.

    1. Create a method to create the file if it does not exist.
    1. Create a method to create the directory if it does not exist.
    1. Create a method for retrieving file contents as a List of Strings.
    1. Create a method to write (append) new contents to a file. This method
       could have an optional parameter to choose between appending the contents
       of the file or not.

    Your class should conform to the interface below:

    ```java
    interface HandlesFiles {
        List<String> slurp(String filename);
        void spit(String filename, List<String> contents);
        void spit(String filename, List<String> contents, boolean append);
    }
    ```

    Note that no IO expceptions are in the method signatures. This means your
    implementation should handle those exceptions, and not expose them.

    Create a `FileHandlerTest` class so you can test your work.

    ============================


    # Java Control Structures and Loops Bonuses

    ### Simple Chat Bot

    Be creative in communicating with your
     user different options and for given scenerios. Create at three phases of the chat, for example...

    			                 "How are you?" (AI says)
    			           |                              |
    			         good                        bad (user types)

    	   "Awesome! Are you super happy?" 	    "Will cake make you better?"

    	          yes          no                     yes             no

    Keep the chat options relatively simple and plan it out clearly before coding it.

    ### Hangman Game

    - prompt a player 1 to enter a word for player 2 to guess
    - track the number of guesses by player 2
    - display to the user the partially completed word
    - string methods from the lesson will be helpful for this bonus



    ======================


